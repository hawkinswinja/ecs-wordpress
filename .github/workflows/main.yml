# Pipeline to autodeploy changes

name: Push and Deploy new changes

on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  id-token: write
  contents: read

jobs:
    Deploy:
        runs-on: ubuntu-latest
        env:
            TF_VAR_region: ${{ secrets.AWS_REGION }}
            TF_VAR_container_path: ${{ secrets.CONTAINER_PATH }}
            TF_VAR_repo-name: ${{ secrets.AWS_ECR_REPOSITORY }}
            TF_VAR_vpc_name: ${{ vars.PROJECT }}
            TF_VAR_kms_key_id: ${{ secrets.KMS }}
            TF_VAR_db_name: ${{ vars.PROJECT }}
            TF_VAR_db_username: ${{ secrets.MYSQL_USER }}
            TF_VAR_db_password: ${{ secrets.MYSQL_PASSWORD }}
            TF_VAR_certificate_arn: ${{ secrets.ACM }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            
            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v3

            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
                aws-region: ${{ secrets.AWS_REGION }}
            
            - name: Set Image Tag to short SHA
              run: |
                export TF_VAR_image_tag=$(git rev-parse --short HEAD)
                echo $TF_VAR_image_tag

            - name: Set up project repository
              working-directory: ./terraform
              run: |
                terraform init
                terraform apply -auto-approve --target=module.ecs.aws_ecr_repository.repo

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
              
            - name: Build, tag, and push docker image to Amazon ECR
            #   env:
            #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            #     REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
            #     IMAGE_TAG: $TF_VAR_image_tag
              run: docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:$TF_VAR_image_tag ./app --push
        